
# Кэшируем запросы к статике в папке /var/cache/nginx в кэш-зону STATIC с объемом кэша в 10Мб протуханием через 7 дней и записью прямо в кэш-директорию
proxy_cache_path /var/cache/nginx keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs_upstream {
  # В адрес сервера NextJS в Докер-контейнере
  server nextjs:3000;

  # Сюда можно добавить дополнительные серверы, для балансировки нагрузки (хех)
}


server {
  listen 80 default_server;

  # Это наш единственный сервер, так что имя не обязательно
  server_name _;

  # Чтобы в заголовках ответов не появлялась версия Nginxы
  server_tokens off;

  # Конфигурация из интернета
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  # Разрешим сжатие для некоторых типов файлов 
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  # Кешируем запросы к статике некста в зону STATIC
  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs_upstream;

    # Для тестирования. В продакшне так дело не нужно
    add_header X-Cache-Status $upstream_cache_status;
  }

  # Запросы к прочей статике тоже кешируем в зону STATIC
  # Некст по-умолчанию не кеширует запросы к статике в URL при помощи buildID
  # Попросим nginx игнорировать такое поведение некста и кешировать запросы
  # Таким образом, раз в час nginx будет ходить за ассетаим заново, игнорирую отсутствие кеша в нексте
  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # Для тестирования. В продакшне так дело не нужно
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    proxy_pass http://nextjs_upstream;
  }
}